/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.38
 * Generated at: 2018-03-12 09:20:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import msc.vo.*;

public final class student_005fcho_005fdel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("msc.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t");
      msc.dao.ScDAO scdao = null;
      scdao = (msc.dao.ScDAO) _jspx_page_context.getAttribute("scdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (scdao == null){
        scdao = new msc.dao.ScDAO();
        _jspx_page_context.setAttribute("scdao", scdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\t\t<title></title>\r\n");
      out.write("\r\n");
      out.write("<script language=\"JavaScript\">\r\n");
      out.write(" <!-- Hide \r\n");
      out.write("function delalert(value)\r\n");
      out.write(" { \r\n");
      out.write("    if (value == true) \r\n");
      out.write("       alert(\"打上勾表示删除,小心哟!\");  \r\n");
      out.write(" }\r\n");
      out.write("// -->\r\n");
      out.write("</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\r\n");
      out.write("\t<body bgcolor=\"#8dd8f8\">\r\n");
      out.write("\t\t");

			request.setCharacterEncoding("utf-8");
			String sid = (String) session.getAttribute("id");
			//String canchoose = (String) session.getAttribute("canchoose");
			if (true) {
				Vector all = scdao.SelectSelf(sid);
				int i = all.size();
				Tc cou[] = new Tc[i];
		
      out.write("\r\n");
      out.write("\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t<font size=\"5\" color=\"#000080\" face=\"华文楷体\"><b>课程信息如下：<br>\r\n");
      out.write("\t\t\t\t\t<br> </b> </font>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<form name=\"formdelcou\" action=\"sc_slt?n=");
      out.print(i);
      out.write("\" method=\"post\"\r\n");
      out.write("\t\t\tonsubmit=\"return isValid(this);\">\r\n");
      out.write("\t\t\t<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t<td width=\"100\">\r\n");
      out.write("\t\t\t\t\t\t课序号\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t课程名\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"80\">\r\n");
      out.write("\t\t\t\t\t\t课程学分\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"80\">\r\n");
      out.write("\t\t\t\t\t\t教学班号\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"80\">\r\n");
      out.write("\t\t\t\t\t\t上课地点\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"100\">\r\n");
      out.write("\t\t\t\t\t\t上课时间\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"80\">\r\n");
      out.write("\t\t\t\t\t\t任课教师\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td width=\"60\">\r\n");
      out.write("\t\t\t\t\t\t删除\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					for (int j = 0; j < i; j++) {
							cou[j] = (Tc) all.elementAt(j);
							String rcno = cou[j].getCno();
							String rcname = cou[j].getCname();
							double rcredit = cou[j].getCredit();
							int rcteachno = cou[j].getCteachno();
							String rclocation = cou[j].getClocation();
							String rctime = cou[j].getCtime();
							String rtname = cou[j].getTname();
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rcno);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rcname);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rcredit);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rcteachno);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rclocation);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rctime);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rtname);
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" name=\"cno");
      out.print(j);
      out.write("\" value=\"");
      out.print(rcno);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"return delalert(this.checked)\" />\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					}
						if (i == 0) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=\"8\">\r\n");
      out.write("\t\t\t\t\t\t无课程信息！\r\n");
      out.write("\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					} else
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td height=\"15\" colspan=\"8\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"action\" value=\"delete\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"sid\" value=");
      out.print(sid);
      out.write(">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\" height=\"25\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"reset\" value=\"重&nbsp&nbsp置\" />\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"提 交\" />\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t");

			} else {
		
      out.write("<div align=\"center\">\r\n");
      out.write("\t\t\t<font size=\"5\" color=\"#ff0000\"><strong>非选课时期，不能删除课程课！\r\n");
      out.write("\t\t\t</strong> </font>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
