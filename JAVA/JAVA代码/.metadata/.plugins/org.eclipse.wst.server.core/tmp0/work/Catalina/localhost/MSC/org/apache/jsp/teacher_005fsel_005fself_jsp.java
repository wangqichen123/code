/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.38
 * Generated at: 2018-03-16 10:38:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import msc.vo.*;

public final class teacher_005fsel_005fself_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("msc.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("    ");
      msc.dao.TcDAO tcdao = null;
      tcdao = (msc.dao.TcDAO) _jspx_page_context.getAttribute("tcdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (tcdao == null){
        tcdao = new msc.dao.TcDAO();
        _jspx_page_context.setAttribute("tcdao", tcdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("    ");
      msc.dao.ScDAO scdao = null;
      scdao = (msc.dao.ScDAO) _jspx_page_context.getAttribute("scdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (scdao == null){
        scdao = new msc.dao.ScDAO();
        _jspx_page_context.setAttribute("scdao", scdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("    <title></title>\r\n");
      out.write("    ");

    request.setCharacterEncoding("utf-8");
    String tname=(String)session.getAttribute("na");
    String tcode=(String)session.getAttribute("pa");
    String tid=request.getParameter("tid");
    Vector all=tcdao.SelectSelf(tid,"");
    int i=all.size();
    Tc cou[]=new Tc[i];
     
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  \r\n");
      out.write("  <body bgcolor=\"#8dd8f8\">\r\n");
      out.write("    <div align=\"center\"><strong><font size=\"5\" face=\"华文楷体\" color=\"#0000a0\">个人基本信息</font></strong></div><br/>\r\n");
      out.write("    <table border=\"1\" align=\"center\">\r\n");
      out.write("    <tr align=\"center\"><td width=\"100\">工号</td><td width=\"100\">姓名</td><td width=\"100\">密码</td></tr>\r\n");
      out.write("    <tr align=\"center\"><td width=\"100\">");
      out.print(tid );
      out.write("</td><td width=\"100\">");
      out.print(tname );
      out.write("</td><td width=\"100\">");
      out.print(tcode );
      out.write("</td></tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    <br/>\r\n");
      out.write("  <div align=\"center\"><font size=\"5\" color=\"#000080\" face=\"华文楷体\"><b>开设课程信息如下：</b></font></div>\r\n");
      out.write("     <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\r\n");
      out.write("     \r\n");
      out.write("     <tr align=\"center\"><td width=\"100\">课序号</td><td width=\"150\">课程名</td><td width=\"80\">课程学分</td><td>平均分</td><td width=\"80\">最高分</td><td width=\"80\">最低分</td><td width=\"80\">选课人数</td><td width=\"80\">详细信息</td></tr>\r\n");
      out.write("\t");

	for(int j=0;j<i;j++){
	cou[j]=(Tc)all.elementAt(j);
	String cno = cou[j].getCno() ;
	String cname = cou[j].getCname() ;
    double credit=cou[j].getCredit();
    Score sco=scdao.GetMaxMinAvg(cno,tid);
    double avscore=sco.getAvscore();
    double maxscore=sco.getMaxscore();
    double minscore=sco.getMinscore();
    int csel=cou[j].getCsel();
	
      out.write("\r\n");
      out.write("            \t<tr align=\"center\">\r\n");
      out.write("\t\t    \t\t<td>");
      out.print(cno);
      out.write("</td>\r\n");
      out.write("\t\t    \t\t<td>");
      out.print(cname);
      out.write("</td>\r\n");
      out.write("\t\t       \t\t<td>");
      out.print(credit);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(avscore);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(maxscore);
      out.write("</td>\r\n");
      out.write("\t\t    \t\t<td>");
      out.print(minscore);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(csel);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><a href=\"teacher_sel_self_coul.jsp?cno=");
      out.print(cno );
      out.write("\" >查看</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t");
 
	}
	if(i==0){	
	
      out.write("\r\n");
      out.write("\t<tr><th colspan=\"10\">无课程信息！</th></tr>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
